package src.rules
 import struct.CharacterData
import enumerate.State
import enumerate.Action
import comment.Message
import java.lang.Math


rule "p1"
enabled false
when 
$p1:CharacterData($p1.playerNumber==true,$p1.isHitConfirm()==true)

$m:Message()
then   
$m.setOffence(1);

end

rule "p2"
enabled false
when 
$p1:CharacterData($p1.playerNumber==false,$p1.isHitConfirm()==true)

$m:Message()
then   
$m.setOffence(0);

end

rule "air"
enabled false
when 
$p1:CharacterData($p1.getState().toString().equals("AIR"))

$m:Message()

then   
$m.setState("air");

end

rule "corner"
when
$p1:CharacterData((Math.abs(480.0 - $p1.getCenterX())/480.0)>0.9||(Math.abs(480.0 - $p1.getCenterX())/480.0)<0.1)
$m:Message()
then
//System.out.println("corner");
$m.setCorner(true);
end




rule "ult"
no-loop
when CharacterData(action.toString().equals("STAND_D_DF_FB")||action.toString().equals("STAND_F_D_DFA")||action.toString().equals("STAND_F_D_DFB")||action.toString().equals("STAND_D_DF_FC"),$n:playerNumber,$action:action.toString())

$m:Message()  
then 
$m.setAction($action);
$m.setPlayerName($n);
$m.setUlt(true);
//$m.speek("Hear is the supper hit in activiation",true);

//System.out.println("engine data :"+$action);

end
rule "lowhp"
when CharacterData(hp<=30,$n:playerNumber,$action:action.toString())
$m:Message()
then  
$m.setHp(true);
$m.setPlayerName($n);
$m.setAction($action);
end
rule "forjump"
no-loop
enabled false
when  CharacterData(action.toString().equals("FOR_JUMP")||action.toString().equals("BACK_JUMP"),$n:playerNumber,$action:action.toString())
$m:Message()
then  
$m.setJump(true);
$m.setPlayerName($n);
$m.setAction($action);
end

rule "heavy"
when  CharacterData(hitCount>=1,action.toString().equals("STAND_FA")||action.toString().equals("CROUCH_FA")||action.toString().equals("STAND_FB")||action.toString().equals("CROUCH_FB"),$n:playerNumber,$action:action.toString())
$m:Message()
then  
$m.setHeavy(true);
$m.setPlayerName($n);
$m.setAction($action);
end

rule "lose"
when 
CharacterData(hp<=20)
$p1:CharacterData(hp>0,$n:playerNumber,$action:action.toString())
$m:Message()
then
$m.setPlayerName($n);
$m.setAction($action);
$m.setEnd(true);
//System.out.println("engine data lose:"+$action);
//$m.speak("round end!",true);
end

rule "combo"
when 
CharacterData(hitCount>=3,$n:playerNumber,$action:action.toString())
$m:Message()
then  
$m.setCombo(true);
$m.setPlayerName($n);
$m.setAction($action);
end

rule "block"
when 
CharacterData(action.toString().equals("STAND_GUARD")||action.toString().equals("CROUCH_GUARD"),$n:playerNumber,$action:action.toString())
CharacterData(hitCount>=1)
$m:Message()
then  
$m.setBlock(true);
$m.setPlayerName($n);
$m.setAction($action);
end

rule "relativeDistance" 
enabled false
when
CharacterData(playerNumber==true,$d1:CharacterData.getCenterX())
CharacterData(playerNumber==false,$d2:CharacterData.getCenterX())
Number((Math.abs((Math.abs($d1-$d2)-41.0))/879.0)<0.3)
then
System.out.println(Math.abs((Math.abs($d1-$d2)-41.0))/879.0);
end

rule "relativeDistance2" 
enabled false
when
CharacterData(playerNumber==true,$d1:CharacterData.getCenterX())
CharacterData(playerNumber==false,$d2:CharacterData.getCenterX())
//Number((Math.abs((Math.abs($d1-$d2)-41.0))/879.0)<0.3)
//$d1>Number(2)
then
System.out.println(Math.abs((Math.abs($d1-$d2)-41.0))/879.0);
end